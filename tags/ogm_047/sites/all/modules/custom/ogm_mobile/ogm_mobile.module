<?php

/**
 * Implementation of hook_menu_alter().
 */
function ogm_mobile_menu_alter(&$items) {
  $items['front_page']['page callback'] = 'ogm_mobile_front_page';
}

function ogm_mobile_front_page() {
  if ($_SESSION['mobile-tools-mobile-device']['type'] == 'mobile') {
    drupal_goto('mobile');
  }
  return front_page();
}

/**
 * Implementation of hook_views_api().
 */
function ogm_mobile_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'ogm_mobile'),
  );
}

/**
 * Implementation of hook_menu().
 */
function ogm_mobile_menu() {
  $items['mobile/geocode'] = array(
    'title' => 'Geocode',
    'description' => 'Geocode an address and pass it to the mobile list view',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page callback' => 'ogm_mobile_geocode',
  );
  $items['mobile'] = array(
    'title' => "What's Green Nearby?",
    'description' => 'Open Green Map for mobile',
    'access arguments' => array('access content'),
    'page callback' => 'ogm_mobile_home',
  );
  $items['mobile/locate'] = array(
    'title' => 'Fetching Your Location',
    'description' => 'Automatically get a devices location',
    'access arguments' => array('access content'),
    'page callback' => 'ogm_mobile_autogeocode',
  );
  return $items;
}

function ogm_mobile_geocode() {
  define("MAPS_HOST", "maps.google.com");
  $key = keys_get_key(array('service' => 'google_maps', 'url'=>$_SERVER['HTTP_HOST']));
  // Initialize delay in geocode speed
  $delay = 0;
  $geocode_base_url = "http://" . MAPS_HOST . "/maps/geo?output=xml" . "&key=" . $key;

  // geocode

  $geocode_pending = true;

  while ($geocode_pending) {
    $address = $_POST['address'];
    $request_url = $geocode_base_url . "&q=" . urlencode($address);
    $xml = simplexml_load_file($request_url) or die("url not loading");

    $status = $xml->Response->Status->code;
    if (strcmp($status, "200") == 0) {
      // Successful geocode
      $geocode_pending = false;
      $coordinates = $xml->Response->Placemark->Point->coordinates;
      $coordinatesSplit = split(",", $coordinates);
      // Format: Longitude, Latitude, Altitude
      $lat = $coordinatesSplit[1];
      $lng = $coordinatesSplit[0];
      // Redirect to view
      drupal_goto('mobile/list', 'distance[latitude]=' . $lat . '&distance[longitude]=' . $lng . '&distance[search_distance]=100&distance[search_units]=mile&address=' . $address);
    } else if (strcmp($status, "620") == 0) {
      // sent geocodes too fast
      $delay += 100000;
    } else {
      // failure to geocode
      $geocode_pending = false;
      echo "Address " . $address . " failed to geocoded. ";
      echo "Received status " . $status . "\n";
      echo $request_url . "\n";
    }
    usleep($delay);
  }
}

function ogm_mobile_home() {
  $url = url('mobile/locate');
  $output = <<<EOM
<script>
if(geo_position_js.init())
		{
			document.write('<a href="$url">Get Current Location</a>');
		}
</script>
EOM;
  return $output;
}

// @TODO - tidy up the way js is added
// @todo - get home page from DOM
function ogm_mobile_autogeocode() {
  $home_url = url('mobile');
  $list_url = url('mobile/list');
  $output = <<<EOM
	<script> 
		if(geo_position_js.init())
		{
			geo_position_js.getCurrentPosition(success_callback,error_callback);
		}
		else
		{
			window.location='$home_url'; 
		}
 
		function success_callback(p)
		{
			window.location = '$list_url?distance[latitude]='+p.coords.latitude+'&distance[longitude]='+p.coords.longitude+'&distance[search_distance]=100&distance[search_units]=mile';
		}
		
		function error_callback(p)
		{
			window.location='$home_url?error=callback_error'; 
		}		
	</script> 
EOM;
  return $output;
}

/**
 * Implementation of hook_block().
 */
 
function ogm_mobile_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator,
      // end users will not see these descriptions.
      $blocks[0]['info'] = t('Address Geocoding');
      return $blocks;

    case 'configure':
    // nothing
      return;

    case 'view': default:
      // If $op is "view", then we need to generate the block for display
      // purposes. The $delta parameter tells us which block is being requested.
      switch ($delta) {
        case 0:
          $block['title'] = '';
          $block['content'] = ogm_mobile_block_0_contents();
          break;
      }
    return $block;
  }
}

function ogm_mobile_block_0_contents() {
  return drupal_get_form('ogm_mobile_address_form');
}

function ogm_mobile_address_form($form_state) {
  $address = $_GET['address'];
  $form['address'] = array(
    '#type' => 'textfield',
    '#title' => 'Address',
    '#size' => '20',
    '#value' => $address,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'search',
  );
  $form['#action'] = url('mobile/geocode');
  return $form;
}