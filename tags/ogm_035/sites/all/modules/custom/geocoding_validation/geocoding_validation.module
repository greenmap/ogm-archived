<?php
// $Id$

/**
 *  Set a weight on this module to ensure it is called after 'location'
 */
function geocoding_validation_install() {
  // set the weight of this module here
  // location appears to have weight 0, so we'll go with 1
  $module_weight = 1;
  //FIXME: I don't think this works the first time (because it's an update not an insert)
  db_query("UPDATE {system} SET weight = %d WHERE name = 'geocoding_validation'", $module_weight);
}

/**
 *  Add our custom validation function to the node form
 */
function geocoding_validation_form_alter(&$form, &$form_state, $form_id) {
  switch($form_id) {
    case 'green_map_node_form':
    case 'green_site_node_form':
      $form['#validate'][] = 'geocoding_validation_location_element_validate';
  }
}

/**
 * Require that a user provide a latitude and longitude
 * if we haven't collected enough information for geocoding to work
 */
function geocoding_validation_location_element_validate() {
  $loc_err_msg_missing = t('Please set a location on the map or enter an address.');
  $loc_err_msg_geocoding = t('The location could not be identified based on the address or postal code provided.');

  $args = func_get_args();
  $locations = $args[1]['values']['locations'];

  if ( is_array($locations) ) {
    foreach ( $locations as $loc_form ) {
      if ((! $loc_form['locpick']['user_latitude']) ||
          (! $loc_form['locpick']['user_longitude']))
      {
        // test exact geocoding
        if ($data = location_latlon_exact($loc_form)) {
          drupal_set_message(t('Site location automatically determined from address; please set a location on the map if this is inaccurate'));
        }
        // test inexact geocoding against a local postcode database
        elseif ($data = location_get_postalcode_data($loc_form)) {
          drupal_set_message(t('Approximate site location determined from postal code; please set a location on the map if this is inaccurate'));
        }
        else {
          if (! ( empty($loc_form['street']) && empty($loc_form['postal_code']) ) ){
            form_set_error('locations', $loc_err_msg_geocoding);
          }
          else {
            form_set_error('locations', $loc_err_msg_missing);
          }
        }
      }
    }
  }
}
