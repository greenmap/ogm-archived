<?php
// $Id$

/**
* Display help and module information
* @param path whitch path of the site we're displaying help
* @param arg array that holds the current path as vould be returned from arg() function
* @return help text for the path
*/
function sync_help($path){
  $output = '';
  switch($path){
	case "admin/modules#sync":
    case "admin/help#sync":
   // $output = '<p>'. t("Displays links to created on this date") . '</p>';
    break;
	case "user/help#sync":
	break;
  }
  return $output;
} // function sync

/**
* Valid permissions for this module
* @return array An array of valid permissions for the sync module
*/

function sync_perm() {
  return array();
} // function sync_perm()


function sync_menu($may_cache){
	$items = array();
	if($may_cache){
		$items[] = array(
			'path' 				=> 'sync/login', 
			'title' 			=> t('sync'),
			'access' 			=> true,
			'callback' 			=> 'sync_login',
			'type'    			=> MENU_CALLBACK,
			'weight' 			=> 8
	  	);
	}else {
	}
	return $items;
}

function sync_login() {
	while(list($k,$v) = each($_GET)){
		echo $k . " ". $v ."<br>\n";
	}
}


function sync_open_mysql_connect($db_user,$db_pass,$db,$server = 'localhost'){
	
	$link = mysql_connect($server, $db_user, $db_pass);
	if (!$link) {
		watchdog('error',t('Could not connect to database. Synchronisation with Open Green Map aborted.'));
		return false;
	}
	
	$db_selected = mysql_select_db($db, $link);
		if (!$db_selected) {
			watchdog('error',t('Can\'t use database. Synchronisation with Open Green Map aborted.'));
			mysql_close($link); // close connect
		return false;
	}
	return $link;
}


function sync_user($op, &$edit, &$account, $category = NULL){
	//global $user;
	switch($op){
		case 'update':
			$role = 4; // 4 = team leader - only they need to be sync'd
			$ogm_uid = $account->uid;
			$greenhouse_profile_fields_fid = 97;
			$ogm_profile_fields_fid = 1;
			
			$name = (trim($edit['name']))?trim($edit['name']):		$account->name;
			$pass = (trim($edit['pass']))?md5(trim($edit['pass'])):	$account->pass;
			$mail = (trim($edit['mail']))?trim($edit['mail']):		$account->mail;
			
			//  *** SET DATABASE VARIABLES ***
			$db_user = 'greenma2';
			$db_pass = 'q2n7yGEm';
			$db = 'greenma2_greenhouse';
			
			
			
			// if name,pass and email are still the same $updated = false
			$updated = 	(	(trim($edit['name']) == $account->name) &&
							(trim($edit['pass']) == '' || trim($edit['pass']) == null) &&
							(trim($edit['mail']) == $account->mail)
						)?false:true;
			
			if($updated == false) 					{return;}

			// need to get their roles
			// print_r($account);
			// print_r($edit);
			
			// 4 = teamleader , user has to be a team leader
			if(count(array_intersect($account->roles, array('team leader'))) == 0){
				watchdog('notice',t('Account not synced: not a lead mapmaker.'));
				return;
			}
		
			
			if (!is_array($account->roles)) {
				watchdog('error',t('Unable to get user roles from account. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to get user roles from account. Synchronisation with Open Green Map aborted.'));
				return;
			}

			
			// get ogm uid from greenhouse db
			if(!$result = db_query('SELECT value FROM {profile_values} where fid= "%d" AND uid ="%d"',$ogm_profile_fields_fid,$ogm_uid)) {
				watchdog('error',t('Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
				return;
			}
			
			$uid = db_fetch_object($result);
			
			
			if (!$link = sync_open_mysql_connect($db_user,$db_pass,$db)) {return;}
			// if ogm uid is not set
			if($uid == null || !$uid || $uid == '' || $uid->value == ''){

				watchdog('error',t('Unable to get user profile data from account. Synchronisation with Greenhouse account aborted.'));
				drupal_set_message(t('Unable to get user profile data from account. Synchronisation with Greenhouse account aborted.'));
				return;
			}
			
			// update ogm

			
				
			if(	!$name || !$pass || !$mail ){
				watchdog('error',t('Error U001: Corrupted data error. Synchronisation with Greenhouse account aborted.'));
				drupal_set_message(t('Corrupted data error. Synchronisation with Greenhouse account aborted.'));
				mysql_close($link);// close connect
				return;	
			}
				
			$q = "UPDATE users SET name='".$name."',pass='".$pass."',mail='".$mail."' WHERE uid = '".$uid->value."'";
			if(!mysql_query($q,$link)) {
				watchdog('error',t('Error U002: Database update failure. Synchronisation with Greenhouse account aborted.'));
				drupal_set_message(t('Database update failure. Synchronisation with Greenhouse account aborted.'));
				mysql_close($link); // close connect
				return;
			}
				
			watchdog('notice',t('Synchronisation with Greenhouse Account successfully completed.'));
			drupal_set_message(t('Synchronisation with Greenhouse Account successfully completed.'));
			mysql_close($link); // close connect
			
					
		break;
		case 'delete':
			/*
			$greenhouse_uid = $account->uid;
			$greenhouse_profile_fields_fid = 97;
			//  *** SET DATABASE VARIABLES ***
			$db_user = 'greenma2_10';
			$db_pass = 'pW7ApkrW';
			$db = 'greenma2_ogmmiikka';
			
			// check the user role in greenhouse
			if (!is_array($account->roles)) {
				watchdog('error',t('Unable to get user roles from account. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to get user roles from account. Synchronisation with Open Green Map aborted.'));
				return;
			}
			
			// $lapsed_roles = array('lapsed user','new unauthenticated user');
			$lapsed_roles = array(5,6);
			
			// if 'lapsed user' or 'new unauthenticated user' roles found user is not approved
  			$approved_user = (count(array_intersect($edit['roles'], $lapsed_roles)) > 0)?false:true;
			
			if($approved_user == false){
				return;
			}
			
			// get ogm uid from greenhouse db
			if(!$result = db_query('SELECT value FROM {profile_values} where fid= "%d" AND uid ="%d"',$greenhouse_profile_fields_fid,$greenhouse_uid)) {
				watchdog('error',t('Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to get user profile data from account. Synchronisation with Open Green Map aborted.'));
				return;
			}
			
			$uid = db_fetch_object($result);
			
			
			
			// if ogm uid alredy exist in greenhouse
			if($uid == null || !$uid || $uid == '' || $uid->value == ''){
				watchdog('error',t('Error D001: Unable to get correct data from the database. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to get correct data from the database. Synchronisation with Open Green Map aborted.'));
				mysql_close($link); // close connect
				return;
			}
			if (!$link = sync_open_mysql_connect($db_user,$db_pass,$db)) {return;}
			// remove all user roles from ogm db
			$q = "DELETE FROM users_roles WHERE uid = '".$uid-value."'";
			if(!mysql_query($q,$link)) {
				watchdog('error',t('Error D002: Unable to delete data from the database. Synchronisation with Open Green Map aborted.'));
				drupal_set_message(t('Unable to delete data from the database. Synchronisation with Open Green Map aborted.'));
				mysql_close($link); // close connect
				return;
			}
			watchdog('notice',t('Synchronisation with Open Green Map successfully completed.'));
			drupal_set_message(t('Synchronisation with Open Green Map successfully completed.'));
			mysql_close($link);
			*/
		break;
		case 'login':
		break;
		case 'logout':
		break;
	}
}


function sync_views_default_views(){
	

//  return $views;
}
