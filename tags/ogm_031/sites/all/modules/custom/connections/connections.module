<?php
/*
 * @file
 *  This module appears to control the connections tab on a GreenMap
 */

function connections_escape_js($str) {
  $str = str_replace('\'', '&#039;', $str);
  $str = str_replace('"', '', $str);
  $str = str_replace("\n", ' ', $str);
  $str = str_replace("\r", ' ', $str);
  return $str;
}

function connections_output_connections($green_site) {
  // build a variable containing the embedded view of all related sites

  $og_nid = array_keys($green_site->og_groups);
  $og_nid = $og_nid[0];

  $og = node_load($og_nid);

  // all sites on this maps with the same primary icon
  $relsite1 = views_embed_view('sites', 'page_3', $green_site->primary_term->tid, $og_nid, $green_site->nid);
  // all sites on other maps with the same primary icon
  $relsite1 = str_replace('<a href=', '<a target="_blank" href=', $relsite1);
  
  $relsite2 = views_embed_view('sites', 'page_7', $green_site->primary_term->tid, $og_nid);
  $relsite2 = str_replace('<a href=', '<a target="_blank" href=', $relsite2);

  $relsite = t('Every site using the same primary Icon on Open Green Map is automatically linked here. You can compare different approaches and solutions on this map and others around the world.');
  $relsite .= '<br /><div style=""><div style=""><div style=""><b>'. t('Other Sites on Map') .'</b></div>';
  $relsite .= $relsite1;
  
  $relsite .= '</div><div style=""><b>'. t('Related Sites Worldwide') .'</b></div><div style="">';
  $relsite .= $relsite2;
  $relsite .= '</div></div>';
  $relsite = connections_escape_js($relsite);

  // build a variable containing the Getting Here
  $getting_here = t('You may see directions the Mapmaker has included, or directions shared by the public on how to get here by bike, wheelchair, mass transit, etc.');
  $getting_here_link_options = array(
    'attributes' => array('title' => t('Add Directions')),
    'query' => '&destination=node/'. $green_site->nid .'/simple&nid='. $green_site->nid
      .'&node_title='. htmlspecialchars($green_site->title) .'&isSimple=true',
    );
  $getting_here .= '<p>'. t('<a href="@directions-page">Add</a> directions to help people get here.  Follow these directions at your own risk.',
    array('@directions-page' => url('node/add/transport-direction', $getting_here_link_options))) .'</p>';
  $getting_here .= '<p>'.
    content_format('field_public_transport_directio', $green_site->field_public_transport_directio[0])
    .'</p>';

  $getting_here .= views_embed_view('transport_directions', 'default', $green_site->nid);
  $getting_here = connections_escape_js($getting_here);

  // build a variable containing the Contacts
  $contacts = '';
  if (!empty($green_site->field_phone[0]['value'])) {
    $contacts .= '<br /><b>'. t('Telephone').'</b> '.content_format('field_phone', $green_site->field_phone[0]);
  }
  if (!empty($green_site->field_email[0]['email'])) {
    $contacts .= '<br /><b>'. t('E-mail').'</b> '.content_format('field_email', $green_site->field_email[0]);
  }
  if (!empty($green_site->field_web[0]['url'])) {
    $contacts .= '<br /><b>'. t('Web Address').'</b> '.content_format('field_web', $green_site->field_web[0]);
  }
  $contacts = connections_escape_js($contacts);

  // list maps by this mapmaker
  $remap1 = views_embed_view('maps', 'page_5', $green_site->uid, $og_nid);
  $remap1 = str_replace('<a href=', '<a target="_blank" href=', $remap1);

  // list closest maps, excluding maps by this mapmaker
  $remap2 = get_location_proximity_view('maps_proximity_search',
      $green_site->location['latitude'], $green_site->location['longitude'], $green_site->uid);
  $remap2 = str_replace('<a href=', '<a target="_blank" href=', $remap2);
  
  $relmap = '<div style="related_maps_wrapper">';
  if ($green_site->uid != 0) {
    $relmap .= '<div style="related_maps_author"><b>'.
      t('Other Maps by @name', array('@name' => $green_site->name)) . '</b></div>';
    $relmap .= $remap1.'<br />';
  }
  $relmap .= '<div style="related_maps_nearby"><b>'. t('Other Nearby Maps') .'</b></div>';
  $relmap .= $remap2;
  $relmap .= '</div>';
  $relmap = connections_escape_js($relmap);

  // build up the javascript containing the content for each of the connections tabs

  // FIXME:
  // this js needs to get broken out into a separate file

  // for example with something like:
  //drupal_add_js(drupal_get_path('module', 'connections') . '/connections.js');

  // then we need to get all the inputs to the js into Drupal.settings
  //inputs to this js:
    // $relsite
    // $relmap
    // $volunteering
    // $getting_here
    // $contacts
  // things that must be present in dom:
    // an element with id 'connections_content'
    // elements with ids connections_menu_item_{Related_Sites,Related_Maps,...etc}
  $js = sprintf('
      var c_content = [];
      c_content["Related Sites"] = "%s";
      c_content["Related Maps"] = "%s";
      %s // Volunteering
      c_content["Getting Here"] = "%s";
      %s // Contacts
      function replace_connections_content(item) {
        document.getElementById("connections_content").innerHTML = c_content[item];
        for (key in c_content) {
          if (key == item) {
            document.getElementById("connections_menu_item_"+key.replace(" ", "_")).className = "connections_menu_item_active";
          }
          else {
            document.getElementById("connections_menu_item_"+key.replace(" ", "_")).className = "connections_menu_item";
          }
        }
      }',
      $relsite,
      $relmap,
      $volunteering ? 'c_content["Volunteering"] = "'.$volunteering.'";' : '',
      $getting_here,
      $contacts ? 'c_content["Contacts"] = "'.$contacts.'";' : '');
  drupal_add_js($js, 'inline');

  // create the div to contain all the connections stuff
  $connections = '';
  $connections .= '<div id="connections_container">';
  $connections .= t('Compare related sites, explore the related maps, find out about volunteering, how to get here and more. Soon, you will find ways to share this map here, too.');
  $connections .= '<p></p>';
  $connections .= '<div id="connections_menu">';
  $menu_items[] = 'Related Sites';
  $menu_items[] = 'Related Maps';
  if ($volunteering) {
    $menu_items[] = 'Volunteering';
  }
  $menu_items[] = 'Getting Here';
  if ($contacts) {
    $menu_items[] = 'Contacts';
  }
  foreach ($menu_items as $menu_item) {
    if ($menu_item == 'Related Sites') {
                   $connections .= sprintf('<p class="connections_menu_item_active" id="connections_menu_item_%s" '.
        'onclick="javascript:replace_connections_content(\'%s\');">%s</p>',
        str_replace(' ', '_', $menu_item), $menu_item, t($menu_item));
                 }
     else {
        $connections .= sprintf('<p class="connections_menu_item" id="connections_menu_item_%s" '.
        'onclick="javascript:replace_connections_content(\'%s\');">%s</p>',
        str_replace(' ', '_', $menu_item), $menu_item, t($menu_item));
    }
  }

  $connections .= '</div>';
  $connections .= '<div id="connections_content">';
  $connections .= $relsite;
  $connections .= t('Choose a connections category from the list on the left.');
  $connections .= '</div>';
  $connections .= '<div style="clear: left;"></div>';
  $connections .= '</div>';

  return $connections;
}

function get_location_proximity_view($view, $latitude, $longitude, $uid) {
  $view = views_get_view($view);
  $view->set_display('default');
  $view->is_cacheable = FALSE;

  // Fetch the distance filter (name of exposed Location proximity filter)
  $item = $view->get_item('default', 'filter', 'distance');

  // Apply dynamic elements to our exposed filter based on current node
  $item['value'] = array(
    'latitude' => $latitude,
    'longitude' => $longitude,
    'search_distance' => 1000,
    'search_units' => 'km',
  );
  $view->set_item('default', 'filter', 'distance', $item);

  $view->args[] = $uid;

  return $view->render();
}

function connections_views_api() {
  return array('api' => 2.0,);
}
