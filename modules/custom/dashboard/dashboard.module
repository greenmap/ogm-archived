<?php
// $Id$

function dashboard_init() {
  // only bother when we are not serving a cached page. check for which function that only exists afterwards
  if (function_exists('drupal_set_content')) {    
    // we have to perform a load in order to assure that the $user->og_groups bits are present.
    global $user;
    if ($user->uid) {
      $user = user_load(array('uid' => $user->uid));
    }
    else {
      $user->og_groups = array();
    }
    
    require dirname(__FILE__). '/dashboard_views.inc';

  }
}



/**
* Display help and module information
* @param path whitch path of the site we're displaying help
* @param arg array that holds the current path as vould be returned from arg() function
* @return help text for the path
*/
function dashboard_help($path){
  $output = '';
  switch($path){
	case "admin/modules#dashboard":
    case "admin/help#dashboard":
   // $output = '<p>'. t("Displays links to created on this date") . '</p>';
    break;
	case "user/help#dashboard":
	break;
  }
  return $output;
} // function dashboard

/**
* Valid permissions for this module
* @return array An array of valid permissions for the dashboard module
*/

function dashboard_perm() {
  return array('access dashboard content', 'administer dashboard');
} // function dashboard_perm()


function dashboard_menu($may_cache){
	$items = array();
	if($may_cache){
 		$items[] = array(
			'path' 				=> 'greenmap/add_to_map', 
			'title' 			=> t('Add to this map'),
			'access' 			=> !user_access('create green_site content'),
			'callback' 			=> 'dashboard_how_to_add',
			'type'    			=> MENU_LOCAL_TASK,
			'weight' 			=> 8
			);
		$items[] = array(
			'path' 				=> 'greenmap/view', 
			'title' 			=> t('World View'),
			'access' 			=> TRUE,
			'type'    			=> MENU_DEFAULT_LOCAL_TASK,
			'weight' 			=> -10,
			);
	}else {
		if (arg(0) == 'node' && is_numeric(arg(1))) {
			$access = false;
			if  ((user_access('administer nodes')) || ($GLOBALS['user']->og_groups[arg(1)]['is_admin'])){
				$access = true;
			} elseif ($GLOBALS['user']->og_groups[arg(1)]){
				$member = true;
			}
			if  ($GLOBALS['user']->og_groups[arg(1)] || $access) {
		 		$items[] = array(
					'path' 				=> 'node/'. arg(1). '/dashboard', 
					'title' 			=> t('Mapboard'),
					'access' 			=> $member,
					'callback' 			=> 'dashboard_leadmapmaker',
      				'callback arguments'=> array(arg(1)),
					'type'    			=> MENU_LOCAL_TASK,
					'weight' 			=> 8
	  			);
				$items[] = array(
					'path' 				=> 'node/'. arg(1). '/members', 
					'title' 			=> t('Members'),
					'access' 			=> $access,
					'callback' 			=> 'dashboard_members_redirect',
      				'callback arguments'=> array(arg(1)),
					'type'    			=> MENU_LOCAL_TASK,
					'weight' 			=> 10,
	  			);
				$items[] = array(
					'path' 				=> 'node/'. arg(1). '/add', 
					'title' 			=> t('Add a site'),
					'access' 			=> $member,
					'callback' 			=> 'dashboard_add',
      				'callback arguments'=> array(arg(1)),
					'type'    			=> MENU_LOCAL_TASK,
					'weight' 			=> 12,
	  			);
				
			}
	  }
	}
	return $items;
	
}
/*
 * hook_menu -calls these functions
 */
 
function dashboard_how_to_add(){
	drupal_goto('how_to_add');
}

function dashboard_add($nid){
	drupal_goto('node/add/green_site', 'gids[]=' . $nid);
}
function dashboard_leadmapmaker($nid){
	drupal_add_js("misc/collapse.js");
	$node = node_load($nid);
	drupal_set_title(t('Mapboard for %group', array('%group' => $node->title)));
	
	//echo $nid;
	/* ************************************ *\
	 * This should contain lists of:		*
	 * - all sites on the map				*
	 * - all unpublished sites on the map 	*
	 * - all flags							*
	 * - all comments						*
	\* ************************************ */
	
	
		
	$allowed_editor = FALSE;
//	echo $nid;
//	print_r($GLOBALS['user']);
// this if statement for access is probably redundant.
	if ((user_access('administer nodes')) || ($GLOBALS['user']->og_groups[arg(1)]['is_admin'])) {
       	$allowed_editor = TRUE;
	}
	
	
	
	$content .= "<p>" . t('Use this page to manage sites on the map. You can also use the <a href="@advanced-mapboard">advanced Mapboard</a>, which lets you filter and search.', array('@advanced-mapboard' => url('advanced/' . $nid))) . "</p>";
	$content .=	"<h3>".t("Published Sites:")."</h3>";
	$content .= "<div style='overflow:auto;max-height:150px;'>";
				$view = views_get_view('dashboard_published_sites');
				$view->args[0]=$nid;
				$site_list = views_build_view('block', $view,$view->args, false, false);
	$content .=	$site_list;
	$content .= "</div>";
	$content .=	"<h3>".t("Suggested Sites:")."</h3>";
	$content .= "<div style='overflow:auto;max-height:150px;'>";
				$view = views_get_view('dashboard_suggested_sites');
				$view->args[0]=$nid;
				$site_list = views_build_view('block', $view,$view->args, false, false);
	$content .=	$site_list;
	$content .= "</div>";
	$content .=	"<h3>".t("Private Sites:")."</h3>";
	$content .= "<div style='overflow:auto;max-height:150px;'>";
				$view = views_get_view('dashboard_unpublished_sites');
				$view->args[0]=$nid;
				$site_list = views_build_view('block', $view,$view->args, false, false);
	$content .=	$site_list;
	$content .= "</div>";
	$content .=	"<h3>".t("Recent Comments:")."</h3>";
				$comment_view = views_get_view('dashboard_comments_recent');
				$comment_view->args[0]=$nid;
				$comment_site_list = views_build_view('block', $comment_view,$comment_view->args, false, false);
	$content .= "<div style='overflow:auto;max-height:150px;'>";
	$content .= $comment_site_list;
	$content .= "</div>";
	if($allowed_editor){
		$content .=	"<h3>".t("Flags:")."</h3>";
					$flag_view = views_get_view('dashboard_list_all_flags');
					$flag_view->args[0]=$nid;
					$flag_site_list = views_build_view('block', $flag_view,$flag_view->args, false, false);
		$content .= "<div style='overflow:auto;max-height:150px;'>";
		$content .= 	$flag_site_list;
		$content .= "</div>";
	}
	//$content .= "</fieldset>";

	return $content;
	

}

/*
 * Redirect admins to the member admin page
 */

function dashboard_members_redirect($gid){
	drupal_goto('og/users/' . $gid);
}

function dashboard_views_default_views(){
	
	
	
	// comments_recent
  $view = new stdClass();
  $view->name = 'dashboard_comments_recent';
  $view->description = 'Display recent comments block';
  $view->access = array (
);
  $view->view_args_php = '';
  $view->page = TRUE;
  $view->page_title = '';
  $view->page_header = 'These are the comments people have made about sites on your map. Click in any link below and then you can reply, or flag it if there\'s a problem.';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'There are no comments';
  $view->page_empty_format = '1';
  $view->page_type = 'table';
  $view->url = 'dashboard/comments';
  $view->use_pager = FALSE;
  $view->nodes_per_page = '0';
  $view->block = TRUE;
  $view->block_title = 'Recent comments';
  $view->block_header = '';
  $view->block_header_format = '1';
  $view->block_footer = '';
  $view->block_footer_format = '1';
  $view->block_empty = '';
  $view->block_empty_format = '1';
  $view->block_type = 'table';
  $view->nodes_per_block = '100';
  $view->block_more = TRUE;
  $view->block_use_page_header = TRUE;
  $view->block_use_page_footer = FALSE;
  $view->block_use_page_empty = TRUE;
  $view->sort = array (
    array (
      'tablename' => 'comments',
      'field' => 'timestamp',
      'sortorder' => 'DESC',
      'options' => 'normal',
    ),
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '1',
      'title' => '',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => 'Site',
      'handler' => 'views_handler_field_nodelink',
      'sortable' => '1',
      'options' => 'link',
    ),
    array (
      'tablename' => 'comments',
      'field' => 'subject',
      'label' => 'Comment',
      'handler' => 'views_handler_field_commentlink_with_mark',
      'sortable' => '1',
      'options' => 'link',
    ),
    array (
      'tablename' => 'comments',
      'field' => 'name',
      'label' => 'From',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'comments',
      'field' => 'timestamp',
      'label' => 'Added',
      'handler' => 'views_handler_field_date_small',
      'sortable' => '1',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'node_comment_statistics',
      'field' => 'comment_count',
      'operator' => '>=',
      'options' => '',
      'value' => '1',
    ),
    array (
      'tablename' => 'comments',
      'field' => 'status',
      'operator' => '=',
      'options' => '',
      'value' => '0',
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(comments, node, node_comment_statistics);
  $views[$view->name] = $view;




	// list all flags
  $view = new stdClass();
  $view->name = 'dashboard_list_all_flags';
  $view->description = 'Lists all flags of current page';
  $view->access = array (
);
  $view->view_args_php = '';
  $view->page = TRUE;
  $view->page_title = '';
  $view->page_header = '';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'Empty';
  $view->page_empty_format = '1';
  $view->page_type = 'table';
  $view->url = 'dashboard/flags';
  $view->use_pager = TRUE;
  $view->nodes_per_page = '10';
  $view->block = TRUE;
  $view->block_title = 'Flags';
  $view->block_header = '';
  $view->block_header_format = '1';
  $view->block_footer = '';
  $view->block_footer_format = '1';
  $view->block_empty = 'No sites on this map have been flagged with a problem.';
  $view->block_empty_format = '1';
  $view->block_type = 'table';
  $view->nodes_per_block = '100';
  $view->block_more = TRUE;
  $view->block_use_page_header = FALSE;
  $view->block_use_page_footer = FALSE;
  $view->block_use_page_empty = FALSE;
  $view->sort = array (
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '7',
      'title' => '',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => 'Title',
      'handler' => 'views_handler_field_nodelink',
      'options' => 'link',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'created',
      'label' => 'Date',
      'handler' => 'views_handler_field_date_small',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'name',
      'label' => 'Flagger',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'reason',
      'label' => 'Reason',
      'handler' => 'all_flags_views_field_reason_default',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'body',
      'label' => 'Description',
    ),
    array (
      'tablename' => 'node',
      'field' => 'edit',
      'label' => '',
      'handler' => 'views_handler_node_edit_destination',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'allow',
      'label' => '',
      'handler' => 'all_flags_views_field_allow_default',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'abuse',
      'field' => 'oid',
      'operator' => '=',
      'options' => '',
      'value' => '',
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(node, abuse);
  $views[$view->name] = $view;




// published sites


  $view = new stdClass();
  $view->name = 'dashboard_published_sites';
  $view->description = 'List of PUBLISHED sites for a map';
  $view->access = array (
);
  $view->view_args_php = '';
  $view->page = TRUE;
  $view->page_title = 'Published Sites';
  $view->page_header = 'These are the sites that can be seen on your map';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'There are no published sites for this map';
  $view->page_empty_format = '1';
  $view->page_type = 'table';
  $view->url = 'dashboard/sites';
  $view->use_pager = TRUE;
  $view->nodes_per_page = '40';
  $view->block = TRUE;
  $view->block_title = 'Published Sites';
  $view->block_header = 'These are the sites that can be seen on your map';
  $view->block_header_format = '1';
  $view->block_footer = '';
  $view->block_footer_format = '1';
  $view->block_empty = '';
  $view->block_empty_format = '1';
  $view->block_type = 'table';
  $view->nodes_per_block = '100';
  $view->block_more = TRUE;
  $view->block_use_page_header = FALSE;
  $view->block_use_page_footer = FALSE;
  $view->block_use_page_empty = TRUE;
  $view->sort = array (
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'sortorder' => 'DESC',
      'options' => 'normal',
    ),
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '7',
      'title' => '',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => 'Site',
      'handler' => 'views_handler_field_nodelink_with_mark',
      'sortable' => '1',
      'options' => 'link',
    ),
    array (
      'tablename' => 'users',
      'field' => 'name',
      'label' => 'Added By',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'label' => 'Last Edited',
      'handler' => 'views_handler_field_date_small',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'edit',
      'label' => '',
      'handler' => 'views_handler_node_edit',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'node',
      'field' => 'type',
      'operator' => 'OR',
      'options' => '',
      'value' => array (
  0 => 'green_site',
),
    ),
    array (
      'tablename' => 'og_ancestry',
      'field' => 'is_public',
      'operator' => '=',
      'options' => '',
      'value' => '1',
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(node, users, og_ancestry);
  $views[$view->name] = $view;

/*
* Suggested Sites
*/

  $view = new stdClass();
  $view->name = 'dashboard_suggested_sites';
  $view->description = 'List of all SUGGESTED sites for a map that are pending';
  $view->access = array (
);
  $view->view_args_php = '';
  $view->page = TRUE;
  $view->page_title = 'Suggested Green Sites';
  $view->page_header = 'These sites have been suggested - click on them to read, and from there click edit to approve, edit or delete them';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'No one has suggested any new sites for this map';
  $view->page_empty_format = '1';
  $view->page_type = 'table';
  $view->url = 'dashboard/suggestedsites';
  $view->use_pager = TRUE;
  $view->nodes_per_page = '40';
  $view->block = TRUE;
  $view->block_title = 'Suggested Sites';
  $view->block_header = '';
  $view->block_header_format = '1';
  $view->block_footer = '';
  $view->block_footer_format = '1';
  $view->block_empty = '';
  $view->block_empty_format = '1';
  $view->block_type = 'table';
  $view->nodes_per_block = '100';
  $view->block_more = TRUE;
  $view->block_use_page_header = TRUE;
  $view->block_use_page_footer = FALSE;
  $view->block_use_page_empty = TRUE;
  $view->sort = array (
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'sortorder' => 'DESC',
      'options' => 'normal',
    ),
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '7',
      'title' => '',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => 'Site',
      'handler' => 'views_handler_field_nodelink_with_mark',
      'sortable' => '1',
      'options' => 'link',
    ),
    array (
      'tablename' => 'users',
      'field' => 'name',
      'label' => 'Added By',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'label' => 'Last Updated',
      'handler' => 'views_handler_field_since',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'edit',
      'label' => '',
      'handler' => 'views_handler_node_edit',
    ),
    array (
      'tablename' => 'node',
      'field' => 'delete',
      'label' => '',
      'handler' => 'views_handler_node_delete_destination',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'node',
      'field' => 'type',
      'operator' => 'OR',
      'options' => '',
      'value' => array (
  0 => 'green_site',
),
    ),
    array (
      'tablename' => 'og_ancestry',
      'field' => 'is_public',
      'operator' => '=',
      'options' => '',
      'value' => '0',
    ),
    array (
      'tablename' => 'node_data_field_suggested_map',
      'field' => 'field_suggested_map_nid_default',
      'operator' => 'NOR',
      'options' => '',
      'value' => array (
  0 => '0',
),
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(node, users, og_ancestry, node_data_field_suggested_map);
  $views[$view->name] = $view;


/*
* unpublished sites
*/

  $view = new stdClass();
  $view->name = 'dashboard_unpublished_sites';
  $view->description = 'List of all sites for a map that are PRIVATE';
  $view->access = array (
);
  $view->view_args_php = '';
  $view->page = TRUE;
  $view->page_title = 'My Green Sites';
  $view->page_header = '';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'There are no private sites for this map.';
  $view->page_empty_format = '1';
  $view->page_type = 'table';
  $view->url = 'dashboard/unpublishedsites';
  $view->use_pager = TRUE;
  $view->nodes_per_page = '40';
  $view->block = TRUE;
  $view->block_title = 'Private Sites';
  $view->block_header = 'These are sites in the process of being published because you and your team are working on them. You and your team can see them on the map, but no one else can.';
  $view->block_header_format = '1';
  $view->block_footer = '';
  $view->block_footer_format = '1';
  $view->block_empty = 'There are no private sites for this map';
  $view->block_empty_format = '1';
  $view->block_type = 'table';
  $view->nodes_per_block = '100';
  $view->block_more = TRUE;
  $view->block_use_page_header = FALSE;
  $view->block_use_page_footer = FALSE;
  $view->block_use_page_empty = FALSE;
  $view->sort = array (
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'sortorder' => 'DESC',
      'options' => 'normal',
    ),
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '7',
      'title' => '',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => 'Site',
      'handler' => 'views_handler_field_nodelink_with_mark',
      'sortable' => '1',
      'options' => 'link',
    ),
    array (
      'tablename' => 'users',
      'field' => 'name',
      'label' => 'Added By',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'changed',
      'label' => 'Last Edited',
      'handler' => 'views_handler_field_date_small',
      'sortable' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'edit',
      'label' => '',
      'handler' => 'views_handler_node_edit',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'node',
      'field' => 'type',
      'operator' => 'OR',
      'options' => '',
      'value' => array (
  0 => 'green_site',
),
    ),
    array (
      'tablename' => 'og_ancestry',
      'field' => 'is_public',
      'operator' => '=',
      'options' => '',
      'value' => '0',
    ),
    array (
      'tablename' => 'node_data_field_suggested_map',
      'field' => 'field_suggested_map_nid_default',
      'operator' => 'OR',
      'options' => '',
      'value' => array (
  0 => '0',
),
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(node, users, og_ancestry, node_data_field_suggested_map);
  $views[$view->name] = $view;


  return $views;
}
