<?php
/**
 * Implementation of hook_perm().
 */
function widget_perm() {
  return array('make widget');
}

function widget_menu($may_cache){
	  $items = array();

  if ($may_cache) {
    // Menu callbacks
	$items[] = array(
      'path' => 'node/widget', 
      'title' => t('Make Map Widget'),
      'callback' => 'widget_create_widget_page',
	
      'type' => MENU_NORMAL_ITEM,
      'access' => (user_access('make widget')),
    );
	$items[] = array(
      'path' => 'node/widget/onmapchange', 
      'title' => t('OnMapChange'),
      'callback' => 'widget_onMapChange',
      'type' => MENU_CALLBACK,
      'access' => (user_access('make widget')),
    );
  } else {
		if (arg(0) == 'node' && is_numeric(arg(1))) {
			$access = false;
			if  ($GLOBALS['user']->og_groups[arg(1)]['is_admin']){
			$access = true;
			}
			if  ($GLOBALS['user']->og_groups[arg(1)]) {
		 		$items[] = array(
					'path' 				=> 'node/'. arg(1). '/widget', 
					'title' 			=> t('Widget'),
					'access' 			=> $access,
					'callback' 			=> 'widget_create_widget_page',
      				'callback arguments'=> array(arg(1)),
					'type'    			=> MENU_LOCAL_TASK,
					'weight' 			=> 9
	  			);
			}
	  }
	}
  return $items;
}
function widget_create_widget_page(){
	$path = drupal_get_path('module', 'widget');
	
//	$js = "var Drupal_base_path = '". base_path() ."';";
 // 	drupal_add_js($js, 'inline');
  //	$js = "var Drupal_current_path = '". $path ."';";
   // drupal_add_js($js, 'inline');
	
	drupal_add_js( $path.'/ajax.js' );
 	drupal_add_js( $path.'/widget.js' );
	//drupal_add_js($path.'/map.js', 'module', 'footer');
	//$path = drupal_get_path('module', 'gmap');
	//drupal_add_js($path.'/gmap.js');
	drupal_add_js( 'misc/collapse.js' );
	
	drupal_set_title(t('Make Map Widget'));
	
	$content .= "<fieldset class='collapsible'>".
				"<legend> Widget settings";
	$content .= "</legend>";
	$content .= "<p>" . t('First choose which map you want to make a widget for, and set the size.') . "</p>";
	$content .= "<ul>";
	$content .= "<li>";
	$content .= "<label for='mapname'>" . t('Map') . "</label>";
	$content .= "<select name='mapname' onChange='Drupal.onMapChange(\"mapname\")'id='mapname'>";
	$content .= "<option selected='selected' value=''>- Select map -</option>";
	
	while(list($key,$group) = each($GLOBALS['user']->og_groups)){
		if  ($GLOBALS['user']->og_groups[$key]['is_admin']){
			$content .= "<option value='".$key."'>".$GLOBALS['user']->og_groups[$key]['title']."</option>";
		}
	}

	$content .= "</select>";
	$content .= "</li>";
	$content .= "<li>";
	$content .= "<label for='width'>Width</label>";
	$content .= "<input type='text' onChange='Drupal.onChange()' value='".variable_get('widget_width', '100%')."' name='width' id='width' />";
	$content .= "</li>";
	$content .= "<li>";
	$content .= "<label for='height'>Height</label>";
	$content .= "<input type='text' onChange='Drupal.onChange()' value='".variable_get('widget_height', '500')."' name='height' id='height' />";
	$content .= "</li>";
	$content .= "</ul>";
	$content .= "</fieldset>";
	
	
	$content .= "<fieldset id='fieldset_map_settings' class='collapsible collapsed'>".
				"<legend> Map settings";
	$content .= "</legend>";
	$content .= "<p>" . t('You can use the settings here to change how the map looks in the widget, or just drag and zoom the map below.') . "</p>";
	$content .= "<ul>";
	$content .= "<li>";
	$content .= "<label for='lat'>Latitude</label>";
	$content .= "<input type='text' onChange='Drupal.onChange()' value='".variable_get('widget_lat', 18.312810846425442)."' name='lat' id='lat' />";
	$content .= "</li>";
	$content .= "<li>";
	$content .= "<label for='lon'>Longitude</label>";
	$content .= "<input type='text' onChange='Drupal.onChange()' value='".variable_get('widget_lon', 6.6796875)."' name='lon' id='lon' />";
	$content .= "</li>";
	$content .= "<li>";
	$content .= "<label for='zoom'>Zoom</label>";
	$content .= "<select onChange='Drupal.onChange()' name='zoom' id='zoom'>";
	$content .= "<option value=''>- Select zoom value -</option>";
	$content .= "<option >0</option>";
	$content .= "<option >1</option>";
	$content .= "<option >2</option>";
	$content .= "<option >3</option>";
	$content .= "<option >4</option>";
	$content .= "<option >5</option>";
	$content .= "<option >6</option>";
	$content .= "<option >7</option>";
	$content .= "<option >8</option>";
	$content .= "<option >9</option>";
	$content .= "<option >10</option>";
	$content .= "<option >11</option>";
	$content .= "<option >12</option>";
	$content .= "<option >13</option>";
	$content .= "<option >14</option>";
	$content .= "<option >15</option>";
	$content .= "<option >16</option>";
	$content .= "<option >17</option>";
	$content .= "</select>";
	$content .= "</li>";
	$content .= "<li>";
	$content .= "<label for='maptype'>Map type</label>";
	$content .= "<select onChange='Drupal.onChange()' name='maptype' id='maptype'>";
	$content .= "<option selected='selected' value='Map'>Map</option>";
	$content .= "<option value='Satellite'>Satellite</option>";
	$content .= "<option value='Hybrid'>Hybrid</option>";
	$content .= "</select>";
	$content .= "</li>";
	$content .= "</ul>";
	$content .= "</fieldset>";
	
	$content .= "<fieldset id='fieldset_html_codes' class='collapsible collapsed'>".
				"<legend> Widget html code";
	$content .= "</legend>";
	$content .= "<p>" . t('Copy this code to your own website or blog to embed the map.') . "</p>";
	$content .= "<input type='text' size='100' value='' name='html' id='html' />";
	$content .= "</fieldset>";
	
	$content .= "<fieldset id='fieldset_map_view' class='collapsible collapsed'>".
				"<legend> Map view";
	$content .= "</legend>";
	$content .= "<p>" . t('This is how your widget will look.') . "</p>";
	$content .= "<div id='DIVview'></div>";
//	$content .= "<iframe width='425' height='350' frameborder='0' scrolling='no' marginheight='0' marginwidth='0' src=''></iframe>";
	$content .= "</fieldset>";
	
	return $content;
}

function widget_onMapChange() {
	if(!arg(3)){die();} // if argument is missing
	$nodeID = arg(3);
	$result = db_query("
	SELECT n.nid, gm.field_gmap_type_value MapTYPE, l.latitude LAT, l.longitude LON, gm.field_map_zoom_value ZOOM
	FROM node n, location l, content_type_green_map gm
	WHERE 
	n.vid = l.eid
	AND n.vid = gm.vid
	AND n.nid = $nodeID
	");
	if( $resultArray = mysql_fetch_array($result) ){
		$zoom = $resultArray["ZOOM"];
		$lat = $resultArray["LAT"];
		$lon = $resultArray["LON"];
		$type = $resultArray["MapTYPE"];
	}
	echo "var lat='".$lat."';var lon='".$lon."';var zoom='".$zoom."';var type='".$type."';";
	die();
}


function widget_views_default_views(){
	  $view = new stdClass();
  $view->name = 'map_widget';
  $view->description = 'Green Map Widget';
  $view->access = array (
);
  $view->view_args_php = '$nodeID = arg(1);
$zoom = 0;
fivestar_add_css();

if($_GET[\'LON\'] && $_GET[\'LAT\'] && $_GET[\'ZOOM\'] && $_GET[\'TYPE\']){
  $zoom = $_GET[\'ZOOM\'];
  $lat = $_GET[\'LAT\'];
  $lon = $_GET[\'LON\'];
  $type = $_GET[\'TYPE\'];
} else { 
  $result = db_query(" 
  SELECT n.nid, gm.field_gmap_type_value MapTYPE, l.latitude LAT, l.longitude LON, gm.field_map_zoom_value ZOOM
  FROM node n, location l, content_type_green_map gm
  WHERE 
	n.vid = l.eid
	AND n.vid = gm.vid
	AND n.nid = $nodeID
  ");

  if( $resultArray = mysql_fetch_array($result) ){
        if($_GET[\'ZOOM\']) {
          $zoom = $_GET[\'ZOOM\'];
        }else {
	  $zoom = $resultArray["ZOOM"];
        }
        if($_GET[\'LAT\']) {
          $lat = $_GET[\'LAT\'];
        }else {
	  $lat = $resultArray["LAT"];
        }
        if($_GET[\'LON\']) {
          $lon = $_GET[\'LON\'];
        }else {
	  $lon = $resultArray["LON"];
        }
        if($_GET[\'TYPE\']) {
          $type = $_GET[\'TYPE\'];
        }else {
	  $type = $resultArray["MapTYPE"];
        }
   }
}
/*
if($node=og_get_group_context()){
      $zoom = $node->field_map_zoom[0][\'value\'];
      $lat = $node->location[\'lat\'];
      $lon = $node->location[\'lon\'];
      $type = $node->field_gmap_type[0][\'value\'];
}
*/

$view->gmap_macro = "[gmap |center=$lat,$lon|zoom=$zoom |type=$type]";';
  $view->page = TRUE;
  $view->page_title = '';
  $view->page_header = '';
  $view->page_header_format = '1';
  $view->page_footer = '';
  $view->page_footer_format = '1';
  $view->page_empty = 'No sites found';
  $view->page_empty_format = '1';
  $view->page_type = 'gmap';
  $view->url = 'greenmap_widget';
  $view->use_pager = FALSE;
  $view->nodes_per_page = '1000';
  $view->sort = array (
  );
  $view->argument = array (
    array (
      'type' => 'gid',
      'argdefault' => '1',
      'title' => '%1',
      'options' => '',
      'wildcard' => '',
      'wildcard_substitution' => '',
    ),
  );
  $view->field = array (
    array (
      'tablename' => 'node',
      'field' => 'nid',
      'label' => '',
    ),
    array (
      'tablename' => 'term_node_1',
      'field' => 'name',
      'label' => 'Icon',
      'options' => 'nolink',
    ),
    array (
      'tablename' => 'node',
      'field' => 'title',
      'label' => '',
      'handler' => 'views_handler_field_nodelink',
      'options' => 'link',
    ),
    array (
      'tablename' => 'location',
      'field' => 'latitude',
      'label' => '',
    ),
    array (
      'tablename' => 'location',
      'field' => 'longitude',
      'label' => '',
    ),
    array (
      'tablename' => 'node_data_field_image',
      'field' => 'field_image_embed',
      'label' => '',
      'handler' => 'content_views_field_handler_ungroup',
      'options' => 'image_thumbnail',
    ),
    array (
      'tablename' => 'votingapi_cache_vote_percent_average',
      'field' => 'value',
      'label' => '',
      'handler' => 'fivestar_views_value_display_handler',
    ),
    array (
      'tablename' => 'node_comment_statistics',
      'field' => 'comment_count',
      'label' => '',
      'handler' => 'views_handler_field_int',
    ),
    array (
      'tablename' => 'abuse',
      'field' => 'pending',
      'label' => '',
      'handler' => 'all_flags_views_field_pending_default',
    ),
  );
  $view->filter = array (
    array (
      'tablename' => 'node',
      'field' => 'status',
      'operator' => '=',
      'options' => '',
      'value' => '1',
    ),
    array (
      'tablename' => 'node',
      'field' => 'type',
      'operator' => 'OR',
      'options' => '',
      'value' => array (
  0 => 'green_site',
),
    ),
  );
  $view->exposed_filter = array (
  );
  $view->requires = array(node, term_node_1, location, node_data_field_image, votingapi_cache_vote_percent_average, node_comment_statistics, abuse);
  $views[$view->name] = $view;
  return $views;

}