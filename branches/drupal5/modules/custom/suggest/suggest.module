<?php

/**
* hook_perm
* permission to suggest a site
*/

function suggest_perm() {
  return array('suggest a site');
}

/**
* hook_menu
* create 'suggest' tabs for appropriate users
*/

function suggest_menu($may_cache){
	$items = array();
	if($may_cache){
	
	}else {
		if (arg(0) == 'node' && is_numeric(arg(1))) {
			// if user is not a member of current group AND user can create green_site AND user can suggest
			if  (!$GLOBALS['user']->og_groups[arg(1)] && user_access('create green_site content') && user_access('suggest a site')) {
				
				// make sure that this is a green map
				if( check_type(arg(1),'green_map') ){
					$items[] = array(
						'path' 				=> 'node/'. arg(1). '/suggest', 
						'title' 			=> t('Suggest a Site'),
						'access' 			=> TRUE,
						'callback' 			=> 'suggest_add',
	      				'callback arguments'=> array(arg(1)),
						'type'    			=> MENU_LOCAL_TASK,
						'weight' 			=> 8
		  			);
				}
				
			}
	    }
	}
	return $items;
	
}

function suggest_add($gid){
	drupal_goto('node/add/green_site', 'suggest=' . $gid);
}

/**
 * hook_form_alter
 * To alter the node add a Green Site form
 * To alter stuff to make the suggest a site feature work
 * By tom_o_t
 */

function suggest_form_alter($form_id, &$form){
	// print $form_id . ' '; // this prints form_id's of all forms on every page - development feature
	
	// this one is useful for debugging - replace form_id_here with name of form
	if($form_id == 'form_id_here') {
		   $form['form_info'] = array(
			 '#value' => '<pre>'. print_r($form, TRUE) .'</pre>'
		   );
	}

	// When a green site is submitted from the context of a particular map
	if($form_id == 'green_site_node_form') {
		
		// FIRST - if this is the suggestion phase then we need to get the map nid and set the node reference correctly
		if( is_numeric($_GET['suggest']) && trim($_GET['suggest']) != null && trim($_GET['suggest']) != ''){
			$suggest_nid = $_GET['suggest'];
			
			// check their permission
			if(!user_access('suggest a site')){
				// set error
				drupal_set_message(t('Sorry, you do not have permission to suggest a site.'), 'error');
				// deny access
				drupal_access_denied();
			}
			
			// check if they've got permission to add a site normally - just redirect if they do
			// we've already checked for this by seeing if they're a member of the group in hook_menu, so skipping this check for now
			
			// load map
			$map = node_load($suggest_nid);
			// check that the mapmaker is accepting suggestions (would need new field in map to allow mapmakers to prevent suggestions - not doing this yet)
			// *****
			
			if($map->og_private > 0){
				// set error
				drupal_set_message(t('Sorry, this map is private and not accepting suggestions yet.'), 'error');
				// deny access
				drupal_access_denied();
			}
			
			//  if permissions are all correct, then alter the node reference
			$form[field_suggested_map][nids]['#type'] = 'hidden';
			$form[field_suggested_map][nids]['#value'] = $suggest_nid;
			
			// it should automatically be submitted to public map as well I guess
			// Actually, decided not to do this - public can only suggest to existing maps.
			// code left incase it's needed inthe future
			
			/*
			if(is_array($form[og_nodeapi][visible][og_groups]['#options'])){
				// *** IMPORTANT **** need to change nid and value to the final 'public' map
				$form[og_nodeapi][visible][og_groups]['#default_value'] = array('13113' => 'Open Green Map');
			}
			*/
			
			// need to submit it to the group being suggested so that admin has ability to edit it
			$form['og_invisible']['og_groups_inaccessible'] = array('#type' => 'value', '#value' => array($suggest_nid => $map->title));

			
			$form[og_nodeapi]['visible']['og_groups']['#title'] = t('Select Additional Maps');
			$form[og_nodeapi]['visible']['og_groups']['#description'] = t('If you are a member of any other maps you can add this site to them too. Use the control key on a PC or the Apple/Command key on a Mac to select multiple maps.');

		
			// need to make 'unpublic' so it doesn't show on map, and disable changing of this
			
			$form['og_nodeapi']['og_public'] = array('#type' => 'value', '#value' => 0);
			$form['og_nodeapi']['visible']['og_public'] = array('#type' => 'checkbox', 
																'#title' => t('Public'), 
																'#default_value' => $node->nid ? $node->og_public : 0, 
																'#description' => t('This suggested site will be kept private until approved.'), 
																'#weight' => 2,
																'#disabled' => true);

			/*
			$form['form_info'] = array(
				'#value' => '<pre>'. print_r($form, TRUE) .'</pre>'
			); // */
			
		} 
		elseif( isset($form['#node']->field_suggested_map[0][nid]) && $form['#node']->field_suggested_map[0][nid] > 0){ 
			
			$suggest_nid = $form['#node']->field_suggested_map[0][nid];
			global $user;
			
			if($user->uid == $form[uid]['#value']){
				// SECOND - if this is a suggested site that is being edited by the original user then let them edit, but don't let them make public if it's still pending
				// still need to keep some stuff hidden
				$form[field_suggested_map][nids]['#type'] = 'hidden';
				$form[field_suggested_map][nids]['#value'] = $suggest_nid;
				// don't let them make it public
				$form['og_nodeapi']['visible']['og_public'] = array('#type' => 'checkbox', 
																'#title' => t('Public'), 
																'#default_value' => $node->nid ? $node->og_public : 0, 
																'#description' => t('This site will be kept private until approved.'), 
																'#weight' => 2,
																'#disabled' => true);				
				
			} else {
				// THIRD if this is a map admin checking an entry we need to:
				// alter the save button to say 'accept suggestion'
				// unset the node reference - as that's what we're using to list things in their mapboard
				// make it public
				
				//  First, let's give the mapmaker some help with this
				drupal_set_message(t('This site has been suggested as an addition to your map. Please review it carefully and then press the Submit button to add it to your map. If you wish to reject it you can untick your map in the "Maps" section below.'));
				
				$form[field_suggested_map][nids]['#type'] = 'hidden';
				$form[field_suggested_map][nids]['#value'] = NULL;
				
				$form['og_nodeapi']['visible']['og_public'] = array('#type' => 'checkbox', 
																'#title' => t('Public'), 
																'#default_value' => $node->nid ? $node->og_public : 1, 
																'#description' => t('This site will be set to public when you approve, unless you un-check this box.'), 
																'#weight' => 2,); // */
				// expand the 'maps' section to make it clearer what's going on
				$form['og_nodeapi']['#collapsed'] = 0;
				
				// Change the text on the button
				$form['submit']['#value'] = 'Accept Suggested Site';
				
				/* $form['form_info'] = array(
					'#value' => '<pre>'. print_r($form, TRUE) .'</pre>'
				); // */
				
				
			}
			
		} elseif (!user_access('administer nodes')) {
			// checking if arg(0) is not 'admin' - because someone with admin permission editing the node type could get caught by this
			// OTHERWISE - just set suggested_map to null and hide via CSS
			$form[field_suggested_map][nids]['#type'] = 'hidden';
			$form[field_suggested_map][nids]['#value'] = NULL;			
			// because we're giving anonymous people permission to add sites, we need to boot them out if they've not chosen a map to add to
			// the way I'm doing this is to check to see if they're subscribed to any groups. If not, deny.
			global $user;
			
			if(empty($user->og_groups)){
				// set error
				drupal_set_message(t('You must <a href="@link">choose a map</a> to suggest your site to.', array('@link' => url('greenmap/recent'))), 'error');
				// deny access
				drupal_access_denied();	
				die();
			}
			
		}
		
		
	}
}


/**
*hook_nodeapi
* use this to do the alerting for map admins
*
*/

function suggest_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'submit':
      break;
    case 'insert':
    case 'update':
      if ($node->field_suggested_map[0][nid] > 0){
		// tell the suggester that this has been submitted
		drupal_set_message(t('This suggestion has been submitted and is awaiting approval from the mapmaker'));
	  }
      break;
    case 'view':
      if ($node->field_suggested_map[0][nid] > 0 && $node->uid){
		drupal_set_message(t('This suggestion is awaiting approval from the mapmaker'));
	  }
      break;
  }
}