<?php
// $Id: impacts.module,v 0.1 2008/06/23 16:39:43 tom_o_t Exp $
/*
 * @file
 * This module controls the Impacts tab on a greenmap
 */

/*
* hook_menu()
* Create a page listing all the impacts/outcomes for a map
*/

drupal_add_css(drupal_get_path('module', 'impacts').'/impacts.css');

function impacts_menu() {
  $items = array();
  $items['node/%/outcomes'] = array(
    'title' => 'About',
    'page callback' => 'impacts_outcomes_page',
    'page arguments' => array(1),
    'access arguments' => array(1, 'access content'),
    'access callback' => 'impacts_should_show_tab',
    'type' => MENU_LOCAL_TASK,
    'weight' => 8);
  return $items;
}


function impacts_should_show_tab($nid, $perm) {
  $node = node_load($nid);
  if ($node->type != 'green_map') {
    return FALSE;
  }
  else {
    return user_access($perm);
  }
}

function impacts_outcomes_page($mapid) {
  $map = db_result(db_query('SELECT title FROM {node} where nid = %d', $mapid));
  // this code may be obsoleted by impacts_should_show_tab() ?
  $node = node_load($mapid);
  if ($node->type != 'green_map') {
    return '<p>'. t('Error: not a Green Map.') .'</p>';
  }
  drupal_set_title(t('About @map', array('@map' => $map)));
  //add number of sites, number of people in team, number of comments here
  /*
  // need layout for this image
  if (count($node->field_map_photo) && $node->field_map_photo[0]['filepath']) {
    $photo_title = $node->field_map_photo[0]['data']['title'] ?
      ' title="'. $node->field_map_photo[0]['data']['title'] .'"' : '';
    $outcomes .= '<div style="clear: both;"><img src="'. base_path() . $node->field_map_photo[0]['filepath'] .'" alt="'. t('Map Team') .'" '. $photo_title .' /></div>';
  }
  */

  $outcomes .= '<div id="about_content">'.'<div id="top_left">';
  
  // ABOUT

  if ($node->field_outcomes[0]['value']){
    $outcomes .= '<div class="block_title">'. t('About') .'</div><br>';
    $outcomes .= $node->field_outcomes[0]['value'];
   }

  	

  
  // OUTCOMES
  $outcomes .= '<div class="block_title">'.t('Outcomes') .'</div><br>';
  
  $res = db_query('SELECT COUNT(vid) AS cnt '.
      'FROM {content_type_impact}, {og_ancestry} og '.
      'WHERE og.group_nid = %d AND field_discover_site_value = 1 '.
      'AND field_site_nid = og.nid', $mapid);

  $line = db_fetch_object($res);

  if ($line->cnt > 0) {
    $count = format_plural($line->cnt, '1 person', '@count people');
    $outcomes .= 
       t('@count discovered green places because of this map. ',
       array('@count' => $count)
       );  
    $outcomes .= '<br><br>';
    }


  // NUMBER OF SITES
  $num_sites = db_result(db_query("SELECT count(*) FROM {node} n INNER JOIN {og_ancestry} oga ON n.nid=oga.nid WHERE n.status = 1 AND oga.group_nid = %d", $node->nid));
  $outcomes .=  t('Number of sites:&nbsp;@num_sites', array('@num_sites' => $num_sites));
  $outcomes .= '<br><br>';

  // COMMENTS
  $num_comments = db_result(db_query("SELECT count(*) FROM {comments} c, {og_ancestry} og where c.nid = og.nid and og.group_nid = %d and c.status = 0", $node->nid));
  $outcomes .= t('Comments:&nbsp;@num_comments', array('@num_comments' =>  $num_comments));
  $outcomes .= '<br><br>';
  
  // NUMBER OF TEAM MEMBERS
  $num_members = db_result(db_query("SELECT count(*) FROM {og_uid} n WHERE n.nid = %d and is_active = 1", $node->nid));
  $outcomes .= t('Team members:&nbsp;@num_members', array('@num_members' => $num_members));
  $outcomes .= '<br>';

  
  // TEAM MEMBER NAMES
  $members = db_query("SELECT u.name,u.uid FROM {og_uid} n INNER JOIN {users} u ON n.uid = u.uid WHERE n.nid = %d and is_active = 1", $node->nid);
  
  
  while ($member=db_fetch_object($members)){
  $outcomes .= l($member->name,'user/'.$member->uid);
  $outcomes .= '<br>';
  }
  
  // RECENT COMMENT
  $views_to_embed_comments =  array(
    array(
      'view' => 'comments',
      'display' => 'block_6',
      )
  );
  
  if ($views_to_embed_comments){
  $outcomes .= '<div class="block_title">'.t('Recent Comments') .'</div><br>';
  
   foreach ( $views_to_embed_comments as $ve3 ) {
    if ( $fun = $ve3['access'] ) {
      if ( !($fun()) ) {
        continue;
      }
    }

    $outcomes .= views_embed_view($ve3['view'], $ve3['display'], $node->nid);

  }}
  
  
  // VIDEO
  $views_to_embed_multimedia = array(
    array(
      'view' => 'dashboard_multimedia',
      'display' => 'block_1',
    )
   );

  if ($views_to_embed_multimedia){
  $outcomes .= '<div class="block_title">'.t('Recent Videos') .'</div><br>';
  
  foreach ( $views_to_embed_multimedia as $ve ) {
    if ( $fun = $ve['access'] ) {
      if ( !($fun()) ) {
        continue;
      }
    }
   
    $outcomes .= views_embed_view($ve['view'], $ve['display'], $node->nid);
    
  }
  }
  
  // IMAGE
  $views_to_embed_photos =  array(
    array(
      'view' => 'dashboard_photos',
      'display' => 'block_1',
      )
  );
  
  if ($views_to_embed_photos){
  $outcomes .= '<div class="block_title">'.t('Recent Photos') .'</div><br>';
  
   foreach ( $views_to_embed_photos as $ve2 ) {
    if ( $fun = $ve2['access'] ) {
      if ( !($fun()) ) {
        continue;
      }
    }

    $outcomes .= views_embed_view($ve2['view'], $ve2['display'], $node->nid);

  }}


  
  $outcomes .= '</div>'.'<div id="top_right">';

  // IMPACTS
  
  $count = 'SELECT count(*)
            FROM {content_type_impact}
            WHERE field_site_nid IN
            (SELECT nid FROM {og_ancestry}
             WHERE group_nid = %d)';
            
       

  if (db_result(db_query($count, $mapid))) {
    $outcomes .= '<div class="block_title">'. t('Impacts') .'</div><br>';
    $outcomes .= impacts_output_impacts_formap($mapid);
  }
 
       
  // SPONSOR 



  if ($node->field_sponsor_name[0]['value']) {
    $outcomes .= '<div class="block_title">'. t('Sponsor') .'</div><br>';
    $outcomes .= '<div id="sponsor_name">'.$node->field_sponsor_name[0]['value'].'</div>';
  }
  
  if ($node->field_sponsor_image && $node->field_sponsor_image[0]['filepath']) {
    $outcomes .= '<div id="sponsor_image"><img src="'. base_path() . $node->field_sponsor_image[0]['filepath'] .'" alt="'. t('Sponsor Image') .'" width=130px"/></div>';
  }
   
  if ($node->field_description_0[0]['value']) {
    $outcomes .= '<div id="sponsor_desc">'.$node->field_description_0[0]['value'].'</div>';
  }

  if ($node->field_sponsor_name_2[0]['value']) {
    $outcomes .= '<div id="sponsor_name">'.$node->field_sponsor_name_2[0]['value'].'</div>';
  }
  
   if ($node->field_sponsor_image_2 && $node->field_sponsor_image_2[0]['filepath']) {
    $outcomes .= '<div id="sponsor_image"><img src="'. base_path() . $node->field_sponsor_image_2[0]['filepath'] .'" alt="'. t('Sponsor Image') .'" width=130px"/></div>';
  }
    
  if ($node->field_description_2[0]['value']) {
    $outcomes .= '<div id="sponsor_desc">'.$node->field_description_2[0]['value'].'</div>';
  }
  
  if ($node->field_sponsor_name_3[0]['value']) {
    $outcomes .= '<div id="sponsor_name">'.$node->field_sponsor_name_3[0]['value'].'</div>';
  } 
  
  if ($node->field_sponsor_image_3 && $node->field_sponsor_image_3[0]['filepath']) {
    
    $outcomes .= '<div id="sponsor_image"><img src="'. base_path() . $node->field_sponsor_image_3[0]['filepath'] .'" alt="'. t('Sponsor Image') .'" width=130px"/></div>';
  }
  
  if ($node->field_description_3[0]['value']) {
    $outcomes .= '<div id="sponsor_desc">'.$node->field_description_3[0]['value'].'</div>';
  }
  
  
  
  $outcomes .= '</div>'.'</div>';
  return $outcomes;
}

 
 
 

/* end of the About page
 * hook_form_alter()
 * alters the form to submit an impact in the infowindow when viewing a site
 */
function impacts_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'impact_node_form':
      $get_nid = (int) $_GET['nid'];
      $get_impacttype = check_plain($_GET['impacttype']);
      if ($get_nid && $get_impacttype && $get_impacttype > '') {
        // hide these form inputs (via css because i couldn't figure out a better way -- mvc)
        drupal_add_css(drupal_get_path('module', 'impacts') .'/impacts.css');
        // set default values for nodereference_select input
        $form['field_site']['#default_value'][0]['nid'] = $get_nid;
        // set default values for optionwidget_select input
        //$form['#field_info']['field_because_of_this_site']['allowed_values'] = $get_impacttype;
        $form['field_because_of_this_site']['#default_value'][0]['value'] = $get_impacttype;
        unset($form['preview']);
      }
      else {
        drupal_set_message(t('Sorry, you must indicate a site and an impact.'), 'error');
        drupal_access_denied();
        die();
      }
    break;
  }
}

// this function is called by green-site-full.tpl.php
// it creates the impacts tab
function impacts_output_impacts($node) {
  // create the form to add a new impact
  $add_impact = '<div id="addimpact"><form method="get" action="'.
    base_path() .'node/add/impact"><label>';
  $add_impact .= t('Because of this site, I ') .
    '<select id="impacttype" name="impacttype">';
  $add_impact .= '<option id="">'. t('choose one') .'</option>';
  $add_impact .= '<option id="Changed a Habit">'. t('Changed a Habit') .'</option>';
  $add_impact .= '<option id="Greened my Work">'. t('Greened my Work') .'</option>';
  $add_impact .= '<option id="Saved CO2">'. t('Saved CO2') .'</option>';
  $add_impact .= '<option id="Protected Nature">'. t('Protected Nature') .'</option>';
  $add_impact .= '<option id="Raised Awareness">'. t('Raised Awareness') .'</option>';
  $add_impact .= '<option id="Connected Locally">'. t('Connected Locally') .'</option>';
  $add_impact .= '<option id="Took Action">'. t('Took Action') .'</option>';
  $add_impact .= '<option id="Other">'. t('Other') .'</option>';
  $add_impact .= '</select> <input type="submit" value="'. t('Add Yours!') .'" />';
  // this ensures that the next page works inside the iframe
  $add_impact .= '<input type="hidden" name="isSimple" value="true" />';
  // this ensures that we return to the green site when we submit the impact
  $add_impact .= '<input type="hidden" name="destination" value="node/'.
    $node->nid .'/simple" />';
  // this passes the node id of the site to the impact form
  $add_impact .= '<input type="hidden" name="nid" value="'. $node->nid .'" />';
  $add_impact .= '<input type="hidden" name="node_title" value="'.
    $node->title .'" />';
  $add_impact .= '</form></div>';

  // query database for impacts
  $result = db_query('SELECT field_because_of_this_site_value AS action,
              COUNT(1) AS actioncount
            FROM {content_type_impact}
              WHERE field_site_nid = %d
              GROUP BY action', $node->nid);

  // set basic details for chart
  $chart = array(
    '#chart_id' => 'impacts_chart',
    '#title' => chart_title(t('Impacts'), 000000, 20),
    '#type' => CHART_TYPE_BAR_H_GROUPED,
    '#adjust_resolution' => TRUE,
    '#size' => chart_size(350, 185),
    '#bar_size' => chart_bar_size(15, 5),
    );

  $colors = array(
    'Changed a Habit'   => 'ff6600',
    'Greened my Work'   => 'ff9933',
    'Saved CO2'         => 'ffcc33',
    'Protected Nature'  => '339933',
    'Raised Awareness'  => '66cc33',
    'Connected Locally' => '006699',
    'Took Action'       => '6699cc',
    'Other'             => '666666',
  );

  // get data for chart
  $max = 0;
  $num_impact_types = 0;
  while ($impact = db_fetch_object($result)) {
    $num_impact_types++;
    $chart['#data'][] = array($impact->actioncount);
    $chart['#legends'][] = t($impact->action);
    $chart['#data_colors'][] = $colors[$impact->action];
    if ($impact->actioncount > $max) {
      $max = $impact->actioncount;
    }
  }

  // adjust height
  $height = 15 * $num_impact_types + 65;
  $chart['#size'] = chart_size(350, $height);

  // automatically set x axis labels for bottom.
  $chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][1][] =
    chart_mixed_axis_range_label(0, $max);

  // add the chart to the impacts section
  $add_impact .= '<div id="impacts_chart">';
  $add_impact .= chart_render($chart);
  $add_impact .= '</div>';

  // this embeds a list of all current impacts
  $add_impact .= '<div id="impacts_right">';

  $impacts_list = views_embed_view('impacts', 'page_1', $node->nid);
  if ($impacts_list) {
    $add_impact .= '<div id="impacts_list">'. $impacts_list .'</div>';
  }

  $res = db_query('SELECT COUNT(vid) AS cnt FROM {content_type_impact} '.
      'WHERE field_site_nid = %d AND field_discover_site_value = 1',
      $node->nid);
  $line = db_fetch_object($res);
  if ($line->cnt > 0) {
    $count = format_plural($line->cnt, '1 person', '@count people');
    $add_impact .= '<p id="impacts_stats">'.
      t('@count discovered this site because of this map. ', array(
      '@count' => $count
    ));
    $add_impact .= l(t('Did you?'), 'node/add/impact', array(
      'query' => 'theme=simple&destination=node/'. $node->nid .'/simple&nid='.
      $node->nid .'&node_title='. $node->title
    ));
    $add_impact .= '</p>';
  }
  $add_impact .= '</div>'; // end impacts_right div

  // return the impacts section to the main info window building function
  return $add_impact;
}

//this function is used to output outcomes_page
function impacts_output_impacts_formap($mapid) {
  // query database for impacts of this whole map
  $result = db_query('SELECT field_because_of_this_site_value AS action,
              COUNT(1) AS actioncount
            FROM {content_type_impact}
              WHERE field_site_nid IN
               (SELECT nid FROM {og_ancestry} where group_nid = %d)
              GROUP BY action', $mapid);

  // set basic details for chart
  $chart = array(
    '#chart_id' => 'impacts_chart_for_map',
    '#title' => chart_title(t(''), 000000, 20),
    '#type' => CHART_TYPE_BAR_H_GROUPED,
    '#adjust_resolution' => TRUE,
    '#size' => chart_size(350, 185),
    '#bar_size' => chart_bar_size(15, 5),
    );

  $colors = array(
    'Changed a Habit'   => 'ff6600',
    'Greened my Work'   => 'ff9933',
    'Saved CO2'         => 'ffcc33',
    'Protected Nature'  => '339933',
    'Raised Awareness'  => '66cc33',
    'Connected Locally' => '006699',
    'Took Action'       => '6699cc',
    'Other'             => '666666',
    );

  // get data for chart
  $max = 0;
  $num_impact_types = 0;
  while ($impact = db_fetch_object($result)) {
    $num_impact_types++;
    $chart['#data'][] = array($impact->actioncount);
    $chart['#legends'][] = t($impact->action);
    $chart['#data_colors'][] = $colors[$impact->action];
    if ($impact->actioncount > $max) {
      $max = $impact->actioncount;
    }
  }

  // adjust height
  $height = 15 * $num_impact_types + 65;
  $chart['#size'] = chart_size(350, $height);

  // automatically set x axis labels for bottom.
  $chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][1][] =
    chart_mixed_axis_range_label(0, $max);

  // add the chart to the impacts section
  $add_impact .= '<div id="impacts_chart">';
  $add_impact .= chart_render($chart);
  $add_impact .= '</div>';

  return $add_impact;
}

function impacts_comments_list($mapid) {
  $start_from = (int) $_GET['page'] ? (int) $_GET['page'] : 0;
  $total_entries = 0; // total count for pager
  $page_increment = 5; // number of tids per page 
  $displayed_count = 0; // number of tids shown

  $sql = 'SELECT field_comments_about_the_impact_value, n.title, n.created, '.
      'c.field_site_nid as sid, sn.title as tl From {content_type_impact} c, '.
      '{node} n, {node} sn, {og_ancestry} og where og.group_nid = %d '.
      'and c.field_comments_about_the_impact_value <> "" and c.nid = n.nid '.
      'and c.field_site_nid = og.nid and c.field_site_nid = sn.nid '.
      'order by n.created desc';

  $res = pager_query($sql, $page_increment, 0, NULL, $mapid);
  
  while ($row = db_fetch_array($res)) {
    $row['created'] = date("M j Y", $row['created']);
    $rows[] = array(
    $row['title'],
    $row['created'],
    $row['field_comments_about_the_impact_value'],
    l($row['tl'],
    'node/'. $row['sid']
    ));
  }
  $header = array(t('Name'), t('Date'), t('Comment'), t('Site'));
  $output .= theme('table', $header, $rows);
  $output .= theme('pager', NULL, $page_increment);
  $output .= theme_pager(NULL,1);

  return $output;
}

  //$count = 'SELECT count(*) FROM {content_type_impact} c JOIN {node} n
  //JOIN {og_ancestry} og WHERE og.group_nid = %d AND c.nid = n.nid
  //AND c.field_site_nid = og.nid';

function impacts_views_api() {
  return array('api' => 2.0,);
}