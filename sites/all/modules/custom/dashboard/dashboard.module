<?php
// $Id$

/* TODO Implement the hook_theme registry. Combine all theme registry entries
   into one hook_theme function in each corresponding module file.
function dashboard_theme() {
  return array(
  );
} */

function dashboard_init() {
  // only bother when we are not serving a cached page. check for which function that only exists afterwards
  if (function_exists('drupal_set_content')) {
    // we have to perform a load in order to assure that the $user->og_groups bits are present.
    global $user;
    if ($user->uid) {
      $user = user_load(array('uid' => $user->uid));
    }
    else {
      $user->og_groups = array();
    }
  module_load_include('inc', 'dashboard', 'dashboard_views');
  }
}

/**
* Display help and module information
* @param path whitch path of the site we're displaying help
* @param arg array that holds the current path as vould be returned from arg() function
* @return help text for the path
*/
function dashboard_help($path, $arg){
  $output = '';
  switch($path){
  case "admin/modules#dashboard":
    case "admin/help#dashboard":
   // $output = '<p>'. t("Displays links to created on this date") . '</p>';
    break;
  case "user/help#dashboard":
  break;
  }
  return $output;
} // function dashboard

/**
 *  implementation of hook_menu
 */
function dashboard_menu(){
  $items = array();
  $items['greenmap/add_to_map'] = array(
    'title' => 'Add to this map',
    'access arguments' => array('create green_site content'),
    'page callback' => 'dashboard_how_to_add',
    'type' => MENU_LOCAL_TASK,
    'weight' => 8
  );
  $items['greenmap/view'] = array(
    'title' => 'World View',
    'access arguments' => array('access content'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['node/%dashboard_map/dashboard'] = array(
    'title' => 'Map Dashboard',
    'access callback' => 'dashboard_access_member_callback',
    'access arguments' => array(1),
    'page callback' => 'dashboard_leadmapmaker',
    'page arguments'=> array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 8
  );
  $items['node/%dashboard_map/members'] = array(
    'title' => 'Map Team',
    'access callback' => 'dashboard_access_admin_callback',
    'access arguments' => array(1),
    'page callback' => 'dashboard_members_redirect',
    'page arguments'=> array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
  $items['node/%dashboard_map/add'] = array(
    'title' => 'Add a site',
    'access callback' => 'dashboard_access_member_callback',
    'access arguments' => array(1),
    'page callback' => 'dashboard_add',
    'page arguments'=> array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 12,
  );
  return $items;
}

function dashboard_map_load($nid) {
  $map_type = 'green_map';
  if ( is_numeric($nid) &&
       ($node = node_load($nid)) &&
       $node->type == $map_type )
  {
    return $node->nid;
  }
  else  {
    return FALSE;
  }
}

/*
 * hook_menu -calls these functions
 */

function dashboard_how_to_add(){
  drupal_goto('how_to_add');
}

function dashboard_add($nid){
  drupal_goto('node/add/green_site', 'gids[]=' . $nid);
}
function dashboard_leadmapmaker($nid){
  $node = node_load($nid);
  drupal_add_js("misc/collapse.js");
  drupal_set_title(t('Map Dashboard for %group', array('%group' => $node->title)));
  $content .= "<p>" . t('Use this page to manage sites on the map. You can also use the <a href="@advanced-mapboard">advanced Map Dashboard</a>, which lets you filter and search.', array('@advanced-mapboard' => url('advanced/' . $node->nid))) . "</p>";


  $views_to_embed = array(
    array(
      'view' => 'dashboard_sites',
      'title' => t('Published Sites') .': ',
      'display' => 'page_1',
    ),
    array(
      'view' => 'dashboard_sites',
      'title' => t('Suggested Sites') .': ',
      'display' => 'page_2',
    ),
    array(
      'view' => 'dashboard_sites',
      'title' => t('Unpublished Sites') .': ',
      'display' => 'page_3',
    ),
    array(
      'view' => 'comments',
      'title' => t('Comments') .': ',
      'display' => 'default',
    ),
    array(
      'view' => 'dashboard_multimedia',
      'title' => t('Videos') .': ',
      'display' => 'page_1',
    ),
    array(
      'view' => 'dashboard_photos',
      'title' => t('Photos') .': ',
      'display' => 'page_1',
    ),
    // TODO:
      // add the 'dashboard_list_all_flags' view
  );

  foreach ( $views_to_embed as $ve ) {
    if ( $fun = $ve['access'] ) {
      if ( !($fun()) ) {
        continue;
      }
    }
    $content .= "<h3>".$ve['title']."</h3>";
    $content .= "<div style='overflow:auto;max-height:150px;'>";
    $content .= views_embed_view($ve['view'], $ve['display'], $node->nid);
    $content .= "</div>";
  }
  return $content;
}

/*
 * Redirect admins to the member admin page
 */
function dashboard_members_redirect($gid){
  drupal_goto('og/users/' . $gid);
}

/*
 * TODO: check these for correctness
 */
function dashboard_access_admin_callback($group_nid = 0) {
  global $user;
  if ( !$user->uid ) {
    return FALSE;
  }
  else if ( ! $group_nid ) {
    return FALSE;
  }
  else {
    $node = node_load($group_nid);
    return og_is_group_admin($node);
  }
}

function dashboard_access_member_callback($group_nid = 0) {
  global $user;
  if ( !$user->uid ) {
    return FALSE;
  }
  else if ( ! $group_nid ) {
    return FALSE;
  }
  else {
    $node = node_load($group_nid);
    return og_is_group_member($node);
  }
}

/*
 * the old code had !(user_access('create green_site content')), which doesn't
 * work well with the new d6 callback/arguments model
 *
 *  TODO: do something different entirely, because this is convoluted
 */
function dashboard_access_callback_not($acc) {
  return
    ! user_access($acc);
}

function dashboard_views_api() {
  return array('api' => 2.0,);
}
