<?php
// $Id$
/*
 * hook_menu()
 * Extra menu items, mostly for mapmakers
 */
function user_menu_menu() {
  $items = array();
  $items['my_maps'] = array(
      'type' => MENU_NORMAL_ITEM,
      'title' => 'My maps',
      'page callback' => 'user_menu_list',
      'access callback' => 'user_menu_access_custom',
      'access arguments' => array('has_map'),
      );
  $items['my_maps/add_map'] = array(
      'type' => MENU_NORMAL_ITEM,
      'title' => 'Add a map',
      'page callback' => 'user_menu_add_map',
      'access callback' => 'user_menu_access_custom',
      'access arguments' => array('group_admin_any'),
      'weight' => 2,
      );
  // for each group that they're a member of, add an item
  foreach (og_all_groups_options() as $og_nid => $og_name) {
    // print name of group
    $items['my_maps/'. $og_nid] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => '!group',
        'title arguments' => array('!group' => $og_name),
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'view'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_member', "nid$og_nid"),
        );
    // anyone who's a member of a group should get a view link
    $items['my_maps/'. $og_nid .'/view'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'View',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'view'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_member', "nid$og_nid"),
        'weight' => '-10',
        );
    // if they have edit permission - give link to edit
    $items['my_maps/'. $og_nid .'/edit'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'Edit',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'edit'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_admin', "nid$og_nid"),
        'weight' => '-8',
        );
    // mapboard
    $items['my_maps/'. $og_nid .'/mapboard'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'Map Dashboard',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'mapboard'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_admin', "nid$og_nid"),
        'weight' => '-6',
        );
    // members
    $items['my_maps/'. $og_nid .'/members'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'Manage members',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'members'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_admin', "nid$og_nid"),
        'weight' => '-4',
        );
   
    // widget
    $items['my_maps/'. $og_nid .'/widget'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'Get widget',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'widget'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_admin', "nid$og_nid"),
        'weight' => '-2',
        );
    // if they have add permission - give add link - any member of map should
    // have add permission
    $items['my_maps/'. $og_nid .'/add'] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => 'Add site',
        'page callback' => 'user_menu_do',
        'page arguments' => array("nid$og_nid", 'add'),
        'access callback' => 'user_menu_access_custom',
        'access arguments' => array('group_member', "nid$og_nid"),
        'weight' => '0',
        );
  }
  $items['my_ogm'] = array(
      'type' => MENU_NORMAL_ITEM,
      'title' => 'My OGM',
      'page callback' => 'user_menu_my_ogm',
      'access callback' => 'user_menu_access_custom',
      'access arguments' => array('my_ogm', "nid$og_nid"),
      );
  return $items;
}

/*
   Custom menu access rules
 */
function user_menu_access_custom($op, $og_nid=0) {
  $og_nid = substr($og_nid,3);
  if (!user_access('access content')) {
    return FALSE;
  }
  global $user;
  switch ($op) {
    case 'has_map':
      // true if user is member of any group at all
      if (is_array($user->og_groups) && count($user->og_groups) > 0) {
        return TRUE;
      }
      break;
    case 'group_member':
      // true if user is member of this group
      if (!user_access('create green_site content')) {
        return FALSE;
      }
      if (array_key_exists($og_nid, $user->og_groups)) {
        return TRUE;
      }
      break;
    case 'group_admin':
      // true if user can administer this group
      if (!user_access('create green_site content')) {
        return FALSE;
      }
      if (!array_key_exists($og_nid, $user->og_groups)) {
        return FALSE;
      }
      return $user->og_groups[$og_nid]['is_admin'];
      break;
    case 'group_admin_any':
      // true if user can administer any group
      if (!user_access('create green_site content')) {
        return FALSE;
      }
      foreach ($user->og_groups as $og_nid => $this_group) {
        if ($this_group['is_admin']) {
          return TRUE;
        }
      }
      break;
    case 'my_ogm':
      global $user;
      if ($user->uid > 0) {
        return TRUE;
      }
      else {
        return FALSE;
      }
  }
  return FALSE;
}

/*
 * hook_menu calls this function
 */
function user_menu_do($og_nid, $op) {
  $og_nid = substr($og_nid,3);
  if (!isset($og_nid)) {
    drupal_set_message($message = 'Error with user_menu', $type = 'error');
    drupal_goto('user');
  }
  elseif ($op == 'view') {
    drupal_goto('node/'. $og_nid);
  }
  elseif ($op == 'edit') {
    drupal_goto('node/'. $og_nid .'/edit');
  }
  elseif ($op == 'mapboard') {
    drupal_goto('node/'. $og_nid .'/dashboard');
  }
  elseif ($op == 'members') {
    drupal_goto('node/'. $og_nid .'/members');
  }
  elseif ($op == 'membership') {
    drupal_goto('og/manage/'. $og_nid);
  }
  elseif ($op == 'widget') {
    drupal_goto('node/'. $og_nid .'/widget');
  }
  elseif ($op == 'add') {
    drupal_goto('node/add/green_site', 'gids[]='. $og_nid);
  }
}

function user_menu_list() {
  drupal_goto('user');
}

function user_menu_add_map() {
  drupal_goto('node/add/green-map');
}

//page callback function for My OGM menu item
function user_menu_my_ogm() {
  drupal_goto('user');
}

function user_menu_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'login':
      global $user;
      if ((count($user->og_groups) == 0) && user_access('create green_map content')) {
        $message = t('You have not added any maps yet. To add your first map !link. You use the link in the "My maps" menu on the bottom right to add a map at any time.', array('!link' => l(t('click here'), 'node/add/green-map')));
        drupal_set_message($message, 'status');
      }
    break;
  }
}

function user_menu_form_alter(&$form, &$form_state, $form_id) {
  //print $form_id .' '; // this prints form_id's of all forms on every page - development feature
  if ($form_id == 'user_register') {
    drupal_set_title(t('Get Started'));
    $form['account']['name']['#description'] = t('Your preferred public username; punctuation is not allowed except for periods, hyphens, and underscores.');
    //$form['form_info'] = array('#value' => '<pre>'. print_r($form, TRUE) .'</pre>');
  }
}
